plugins {
    id 'java'
    id 'com.mattworzala.canary' version '0.1'
}

group 'com.mattworzala.canary'
version '0.1'

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
    maven { url 'https://repo.spongepowered.org/maven' }
}

dependencies {
    implementation "com.github.${rootProject.minestomVariant}:Minestom:${rootProject.minestomVersion}"

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.2'

    testImplementation rootProject
}

test {
    useJUnitPlatform()
}

//todo this could come from a gradle plugin which configures it for you, or maybe a useCanaryPlatform method similar to useJUnitPlatform?
task sandbox(type: Exec) {
    // We depend on `testClasses` and `jar` instead of `build` because
    // `build > check > test` and executing the tests before the sandbox is incorrect.
    dependsOn testClasses
    dependsOn jar

    group = "verification"
    description = "Create a testing sandbox to create or execute Canary tests."

    workingDir project.buildDir
    commandLine "${System.getProperty("java.home")}/bin/java",
            "-Dcanary.environment=extension",
            "-classpath", project.sourceSets.test.runtimeClasspath.getAsPath(),
            "com.mattworzala.canary.platform.launcher.SandboxLauncher"
}
